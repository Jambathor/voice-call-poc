name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v3

      - name: Verify Agora App ID secret
        env:
          AGORA_APP_ID: ${{ secrets.AGORA_APP_ID }}
        run: |
          if [ -n "$AGORA_APP_ID" ]; then
            echo "✓ AGORA_APP_ID is set and not empty"
          else
            echo "✗ AGORA_APP_ID is not set"
            exit 1
          fi

      - name: Generate env.js with Agora App ID
        env:
          AGORA_APP_ID: ${{ secrets.AGORA_APP_ID }}
        run: |
          # Create env.js with the App ID
          echo "window.AGORA_APP_ID = '${AGORA_APP_ID}';" > env.js
          
          # Verify file was created with content
          if [ ! -s env.js ]; then
            echo "Error: env.js is empty"
            exit 1
          fi

      - name: Prepare deployment files
        run: |
          # Create a temporary directory for deployment files
          mkdir deploy
          
          # Copy only required files
          cp index.html deploy/
          cp styles.css deploy/
          cp app.js deploy/
          cp env.js deploy/
          cp README.md deploy/

      - name: Upload deployment artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: deploy

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2